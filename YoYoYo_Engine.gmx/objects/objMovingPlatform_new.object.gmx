<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMovingPlatform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>objBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>yspeed = 0;

bounce = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dX = x - xprevious;
var dY = y - yprevious;

var yOffset = 9;

//if (instance_exists(objPlayer)) if (objPlayer.onPlatform) dY-=objPlayer.vspeed;

var p = instance_place(x-dX,y-dY-1,objPlayer);
with (p) {
    show_debug_message("p");
    
    //we're on the platform if we're above/even with the platform or about to rise into it
    
    //player was standing above the platform last frame or is currently over it
    var abovePlatform = (yprevious &lt;= other.yprevious - yOffset);   //yprevious &lt;= other.y - yOffset
    
    //player was previously below the platform and is now above it
    var risingIn = (yprevious &gt; other.yprevious - yOffset &amp;&amp; y &lt;= other.y - yOffset); //yprevious &lt;= other.y - yOffset - 1
    
    
    //alternatively:
    //we're not on the platform if we're below the platform and not about to rise into it
    
    if (abovePlatform || risingIn) {
        show_debug_message("we in there");
        
        if (place_free(x,other.y-yOffset)) {
            y = other.y - yOffset;
        }
        if (place_free(x+dX,y)) {
            x += dX;
        }
        
        vspeed = max(dY,0); //only affect player speed when the platform moves down
        djump = 1;
        //onPlatform=true;
    }
}

if (bounce) {
    move_bounce_solid(false);
    
    /*
    if (!place_free(x,y+vspeed)) {
        vspeed*=-1;
    }
    if (!place_free(x+hspeed,y)) {
        hspeed*=-1;
    }
    */
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
