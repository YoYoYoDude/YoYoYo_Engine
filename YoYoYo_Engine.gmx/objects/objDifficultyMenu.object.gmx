<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//initiailze menu variables

difSelect = 0;
select = 1;
select2 = 0;
str[1] = "Save 1";
str[2] = "Save 2";
str[3] = "Save 3";

appleIndex = 0;
playerIndex = 0;

//load save file values

for (var i  = 1; i &lt;= 3; i++)
{
    if (file_exists("Data\save"+string(i)))  //check if current save exists
    {
        //load save data        
        exists[i] = 1;
        
        var f = file_text_open_read("Data\save"+string(i));
        
        var list = ds_list_create();
        ds_list_read(list,base64_decode(file_text_read_string(f)));
        
        file_text_close(f);
        
        death[i] = ds_list_find_value(list,0);
        if (!is_real(death[i])) //check for undefined value in case the save was messed with
            death[i] = 0;
        
        time[i] = ds_list_find_value(list,1);
        if (!is_real(time[i]))
            time[i] = 0;

        difficulty[i] = ds_list_find_value(list,3);
        if (!is_real(difficulty[i]))
            difficulty[i] = 0;
        
        for (var j = 1; j &lt;= 8; j++)
        {
            boss[j,i] = ds_list_find_value(list,16+j);
            if (!is_real(boss[j,i]))
                boss[j,i] = 0;
        }
        
        clear[i] = ds_list_find_value(list,25);
        if (!is_real(clear[i]))
            clear[i] = 0;
        
        ds_list_destroy(list);
    }
    else
    {
        exists[i] = 0;
        death[i] = 0;
        time[i] = 0;
    }
    
    var t = time[i];
    
    timeStr[i] = string(t div 3600) + ":";
    t = t mod 3600;
    timeStr[i] += string(t div 600);
    t = t mod 600;
    timeStr[i] += string(t div 60) + ":";
    t = t mod 60;
    timeStr[i] += string(t div 10);
    t = t mod 10;
    timeStr[i] += string(floor(t));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//animate select sprites
appleIndex = (appleIndex + 1/15) mod 2;
playerIndex = (playerIndex + 1/5) mod 4;

if (!difSelect)
{
    if (keyboard_check_pressed(vk_left))    //global.leftbutton
    {
        audio_play_sound(global.menuSound,0,0);
        select -= 1;
        if(select &lt; 1)
            select = 3;
    }
    else if (keyboard_check_pressed(vk_right))  //global.rightbutton
    {
        audio_play_sound(global.menuSound,0,0);
        select += 1;
        if(select &gt; 3)
            select = 1;
    }
    else if (keyboard_check_pressed(ord("Z"))) //global.shotbutton
    {
        room_goto(rTitle);  //go back
    }
    else if (keyboard_check_pressed(vk_shift)) //global.jumpbutton
    {
        if (global.menuMode == 0)   //use the difficulty select room to select difficulty
        {
            global.savenum = select;
            room_goto(rDifficultySelect);
        }
        else    //use the menu to select difficulty
        {
            difSelect = 1;
            if (exists[select]) //check if there is a save in the current slot
                select2 = -1;   //default to load game
            else
                select2 = 0;    //default to medium
        }
    }
}
else
{
    if (keyboard_check_pressed(vk_left))    //global.leftbutton
    {
        audio_play_sound(global.menuSound,0,0);
        select2 -= 1;
        if ((select2 == -1 &amp;&amp; !exists[select]) || (select2 &lt; -1))
            select2 = 3;
    }
    else if (keyboard_check_pressed(vk_right))  //global.rightbutton
    {
        audio_play_sound(global.menuSound,0,0);
        select2 += 1;
        if (select2 &gt; 3)
        {
            if (exists[select])
                select2 = -1;
            else
                select2 = 0;
        }
    }
    else if (keyboard_check_pressed(ord("Z"))) //global.shotbutton
    {
        difSelect = 0;
    }
    else if (keyboard_check_pressed(vk_shift)) //global.jumpbutton
    {
        global.savenum = select;
        
        if (select2 == -1)  //load game
        {
            if (file_exists("Data\save"+string(global.savenum)))
                scrLoadGame(true);
        }
        else    //starts new game
        {
            global.gameStarted = 1; //sets game in progress (enables saving, restarting, etc.)
            global.autosave = 1;
            
            global.difficulty = select2;
            
            if(file_exists("Data\save"+string(global.savenum)))
                file_delete("Data\save"+string(global.savenum));
            
            room_goto(global.startRoom);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i = 1; i &lt;= 3; i += 1)
{
    draw_set_color(c_black)
    draw_set_halign(fa_left)
    draw_set_font(fDefault30);
    
    draw_text(x+(i-1)*239+2,y,str[i]);
    
    draw_set_font(fDefault12);
    
    draw_text(x+(i-1)*239+10,y+70,"Deaths: "+string(death[i]));
    draw_text(x+(i-1)*239+10,y+90,"Time: "+timeStr[i]);
    
    draw_set_halign(fa_center);
    
    if (difSelect &amp;&amp; i == select)
    {
        if(select2==-1) draw_text(x + (i-1)*239 + 65, y+49,"&lt; Load game &gt;");
        else if(select2==0) draw_text(x + (i-1)*239 + 65, y+49,"&lt; Medium &gt;");
        else if(select2==1) draw_text(x + (i-1)*239 + 65, y+49,"&lt; Hard &gt;");
        else if(select2==2) draw_text(x + (i-1)*239 + 65, y+49,"&lt; Very Hard &gt;");
        else if(select2==3) draw_text(x + (i-1)*239 + 65, y+49,"&lt; Impossible &gt;");
    }
    
    if(exists[i])
    {        
        if ((!difSelect) || (difSelect &amp;&amp; i != select))
        {
            if(difficulty[i]==0){draw_text(x+(i-1)*239+65,y+49,"Medium")}
            else if(difficulty[i]==1){draw_text(x+(i-1)*239+65,y+49,"Hard")}
            else if(difficulty[i]==2){draw_text(x+(i-1)*239+65,y+49,"Very Hard")}
            else if(difficulty[i]==3){draw_text(x+(i-1)*239+65,y+49,"Impossible")}
        }
        
        draw_set_font(fDefault24);
        
        if(clear[i]==1){draw_text(x+(i-1)*239+63,y+215,"Clear!!")}
        
        if(boss[1,i]==1){draw_sprite(sprBossItem,-1,x+(i-1)*239+0,y+128)}
        if(boss[2,i]==1){draw_sprite(sprBossItem,-1,x+(i-1)*239+32,y+128)}
        if(boss[3,i]==1){draw_sprite(sprBossItem,-1,x+(i-1)*239+64,y+128)}
        if(boss[4,i]==1){draw_sprite(sprBossItem,-1,x+(i-1)*239+96,y+128)}
        if(boss[5,i]==1){draw_sprite(sprBossItem,-1,x+(i-1)*239+0,y+160)}
        if(boss[6,i]==1){draw_sprite(sprBossItem,-1,x+(i-1)*239+32,y+160)}
        if(boss[7,i]==1){draw_sprite(sprBossItem,-1,x+(i-1)*239+64,y+160)}
        if(boss[8,i]==1){draw_sprite(sprBossItem,-1,x+(i-1)*239+96,y+160)}
    }
    else
    {
        if ((!difSelect) || (difSelect &amp;&amp; i != select))
        {
            draw_text(x+(i-1)*239+65,y+49,"No Data");
        }
    }
    
    if(i == select)
    {
        draw_sprite(sprCherry,appleIndex,x+(i-1)*239+5,y+310);
        draw_sprite(sprCherry,appleIndex,x+(i-1)*239+25,y+310);
        draw_sprite(sprCherry,appleIndex,x+(i-1)*239+45,y+310);
        draw_sprite(sprPlayerIdle,playerIndex,x+(i-1)*239+65,y+310);
        draw_sprite(sprCherry,appleIndex,x+(i-1)*239+85,y+310);
        draw_sprite(sprCherry,appleIndex,x+(i-1)*239+105,y+310);
        draw_sprite(sprCherry,appleIndex,x+(i-1)*239+125,y+310);
    }
}

//button info
draw_set_font(fDefault12);
draw_set_halign(fa_left);
draw_text(34,556,"[Z] Back");
draw_set_halign(fa_right);
draw_text(766,556,"[Shift] Accept");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
